name: Generate Swagger and Deploy

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - '.github/workflows/deploy-swagger.yml'

env:
    DB_URL: jdbc:mysql://localhost:3306/fingerprint?useSSL=false&allowPublicKeyRetrieval=true
    DB_USER: root
    DB_PASSWORD: root
    AWS_S3_IMAGE_BUCKET_NAME: test-bucket
    AWS_REGION: ap-northeast-1
    AWS_ACCESS_KEY_ID: dummy-access-key
    AWS_SECRET_ACCESS_KEY: dummy-secret-key
    JWT_SECRET: dummy-jwt
    JWT_EXPIRATION: 3600
    LINE_ACCESS_TOKEN: dummy-line-token
    LINE_ACCESS_TOKEN_DEV: dummy-line-token-dev
    GOOGLE_CLIENT_ID: dummy-google-client-id

jobs:
  generate-swagger:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: fingerprint
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
        ports:
          - 3306:3306

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Spring Boot
        run: ./gradlew bootJar

      - name: Wait for MySQL to be healthy
        run: |
          for i in {1..10}; do
            status=$(docker inspect --format='{{.State.Health.Status}}' $(docker ps -qf "ancestor=mysql:8"))
            echo "MySQL container status: $status"
            if [ "$status" == "healthy" ]; then
              echo "MySQL is healthy!"
              break
            fi
            sleep 5
          done
          
          if [ "$status" != "healthy" ]; then
            echo "MySQL did not become healthy in time." >&2
            exit 1
          fi

      - name: Run Spring Boot in background
        run: |
          nohup java -jar build/libs/*.jar \
            --server.port=8080 \
            --spring.profiles.active=aws,dev,ci > spring.log 2>&1 &

      - name: Wait for server
        run: |
          echo "Waiting for Spring Boot to start..."
          timeout 60s bash -c 'until curl -f http://localhost:8080/actuator/health | grep -q UP; do sleep 3; done'

      - name: Download Swagger JSON
        run: |
          mkdir -p docs
          curl http://localhost:8080/v3/api-docs -o docs/swagger.json

      - name: Copy Swagger UI template
        run: |
          curl https://raw.githubusercontent.com/swagger-api/swagger-ui/master/dist/index.html -o docs/index.html
          sed -i 's|https://petstore.swagger.io/v2/swagger.json|swagger.json|' docs/index.html

      - name: Switch to swagger-docs branch
        run: |
          git fetch origin
          git checkout -B swagger-docs origin/swagger-docs || git checkout -b swagger-docs

      - name: Commit & Push docs
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'actions@github.com'
          git add docs
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          git commit -m "Update Swagger UI"
          git push --force origin swagger-docs